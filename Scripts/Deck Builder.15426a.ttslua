-- Local Positions
BUTTON_POSITION = {-6.75,0.6,7.75}
-- Global Positions
QUEST_DECK_1_POSITION = {-87,4,112}
QUEST_DECK_2_POSITION = {-87,4,105}
QUEST_DECK_3_POSITION = {-82,4,112}
QUEST_DECK_4_POSITION = {-82,4,105}
PLAYER_DECK_1_POSITION = {-87,4,112}
PLAYER_DECK_2_POSITION = {-87,4,105}

QUEST_DECK_POSITIONS = {QUEST_DECK_1_POSITION, QUEST_DECK_2_POSITION, QUEST_DECK_3_POSITION, QUEST_DECK_4_POSITION}

GOOGLE_DRIVE_PREFIX = "https://drive.google.com/uc?export=view&id="

PLAYTEST_DATA = {
    packs = {
        pack1 = {
            name = "The Aldburg Plot",
            description = "(AP 1)",
            links = {
                quest_decks = 2,
                quest_1 = {
                    front = "1CqJsUOg_Jxqj5OgrEbxuMlj0pP3A1UA0",
                    back = "1ihEHcxMMefFguOIaW5IzKHfXT6bbQToZ",
                    metadata = {
                        width = 10,
                        height = 1,
                        total = 9,
                        unique_back = true,
                        use_back_sheet = true,
                        sideways = true
                    }
                },
                quest_2 = {
                    front = "1GbhDfn_i-NWDVAG8HNxi9Ve8pUNIQIc6",
                    back = "1scSK9ffNtgn9URnOWbDa-HWQ2_bYYAWW",
                    metadata = {
                        width = 10,
                        height = 5,
                        total = 46,
                        unique_back = true,
                        use_back_sheet = true,
                        sideways = false
                    }
                },
                player = {
                    front = "1y4ETcxTGTHzDXMsMhlpMPVaX9A8Y2OJq",
                    back = "1h_7wRdjcwm6if-lTmvJBijwpfj_jBLMv",
                    metadata = {
                        width = 10,
                        height = 2,
                        total = 11,
                        unique_back = true,
                        use_back_sheet = true,
                        sideways = false
                    }
                }
            }
        },
        pack2 = {
            name = "Fire on the Eastemnet",
            description = "(AP 2)",
            links = {}
        },
        pack3 = {
            name = "The Gap of Rohan",
            description = "(AP 3)",
            links = {}
        },
        pack4 = {
            name = "The Glittering Caves",
            description = "(AP 4)",
            links = {}
        },
        pack5 = {
            name = "Mustering of the Rohirrim",
            description = "(AP 5)",
            links = {}
        },
        pack6 = {
            name = "Blood in the Isen",
            description = "(AP 6)",
            links = {}
        },
        pack7 = {
            name = "Scouring of the Shire",
            description = "(GenCon 2021)",
            links = {}
        }
    }
}

function onLoad()
    log("PlaytestBuilder Loading...")
    Global.call("makeUI")
    createBuildDeckButton()
    log("PlaytestBuilder Loaded Successfully!")
end


function createBuildDeckButton()
  local button_parameters = {}
  button_parameters.click_function = "buildPlaytestButtonClicked"
  button_parameters.function_owner = self
  button_parameters.position = BUTTON_POSITION
  button_parameters.font_size = 150
  button_parameters.width = 1400
  button_parameters.height = 300
  button_parameters.tooltip = "Click to generate ALeP playtest cards!"
  button_parameters.label = "Generate ALeP Deck"
  button_parameters.scale = {1,1.5,1.5}
  self.createButton(button_parameters)
end

function buildPlaytestButtonClicked()
  Global.call("toggleUI")
end

function generateALEPPlayerCards(params)
    log("Spawning ALeP Player Deck"..params.playerBox)
    local packData = findPlaytestPack(params.playerBox)
    if packData ~= nil then
        spawnDeck(PLAYER_DECK_1_POSITION, packData.links.player.front, packData.links.player.back, packData.links.player.metadata)
    else
        broadcastToAll("Unable to locate ALeP Metadata for selected pack", {0.5,0.5,0.5})
    end
end

function generateALEPEncounterCards(params)
    log("Spawning ALeP Encounter Deck"..params.playerBox)
    local packData = findPlaytestPack(params.playerBox)

    if packData ~= nil then
        local numDecks = packData.links.quest_decks
        for i=1, numDecks, 1 do
            local deckPosition = QUEST_DECK_POSITIONS[i]
            local questDeckData = packData.links["quest_"..i]
            spawnDeck(deckPosition, questDeckData.front, questDeckData.back, questDeckData.metadata)
        end
    else
        broadcastToAll("Unable to locate ALeP Metadata for selected pack", {0.5,0.5,0.5})
    end
end

function spawnDeck(deckPosition, cardFrontsId, cardBacksId, metadata)
    local deckObject = spawnObject({
        type = "DeckCustom",
        position = deckPosition,
        rotation = {0, 180, 0},
        sound = false,
        scale = {2, 2, 2}
    })

    deckObject.setCustomObject({
        face = GOOGLE_DRIVE_PREFIX..cardFrontsId,
        back = GOOGLE_DRIVE_PREFIX..cardBacksId,
        unique_back = metadata.unique_back,
        width = metadata.width,
        height = metadata.height,
        number = metadata.total,
        back_is_hidden = metadata.use_back_sheet,
        sideways = metadata.sideways
    })
end

function findPlaytestPack(packName)
    for _, pack in pairs(PLAYTEST_DATA.packs) do
        local title = pack.name.." - "..pack.description
        if title == packName then
            return pack
        end
    end
end
